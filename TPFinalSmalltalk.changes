----QUIT----2024-06-17T12:24:46.915697+02:00 Pharo12.0-SNAPSHOT-64bit-aeb1d8e.image priorSource: 0!----QUIT----2024-06-17T12:24:46.916828+02:00 Pharo12.0-SNAPSHOT-64bit-aeb1d8e.image priorSource: 0!----QUIT----2024-06-17T12:25:24.325965+02:00 Pharo12.0-SNAPSHOT-64bit-aeb1d8e.image priorSource: 101!----QUIT----2024-06-17T12:25:24.327507+02:00 Pharo12.0-SNAPSHOT-64bit-aeb1d8e.image priorSource: 202!Object << #Tribooleano	slots: {};	sharedVariables: {};	package: 'Tribooleano'!!Tribooleano methodsFor: 'nil' stamp: '6/17/2024 11:27'!& unTribooleano	self subclassResponsibility ! !!Tribooleano methodsFor: 'nil' stamp: '6/17/2024 11:27'!| unTribooleano	self subclassResponsibility ! !!Tribooleano methodsFor: 'nil' stamp: '6/17/2024 11:27'!not	self subclassResponsibility ! !!Tribooleano methodsFor: 'nil' stamp: '6/17/2024 11:28'!esVerdadero	self subclassResponsibility ! !!Tribooleano methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:28'!esFalso	self subclassResponsibility ! !!Tribooleano methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:28'!esError	self subclassResponsibility ! !!Tribooleano methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:28'!siVerdadero: bloqueVerdadero	self subclassResponsibility ! !!Tribooleano methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:28'!siFalso: bloqueFalso	self subclassResponsibility ! !!Tribooleano methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:28'!siError: bloqueError	self subclassResponsibility ! !!Tribooleano methodsFor: 'nil' stamp: '6/17/2024 11:29'!siVerdadero: bloqueVerdadero siFalso: bloqueFalso	self subclassResponsibility ! !!Tribooleano methodsFor: 'nil' stamp: '6/17/2024 11:29'!siVerdadero: bloqueVerdadero siError: bloqueError	self subclassResponsibility ! !!Tribooleano methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:29'!siVerdadero: bloqueVerdadero siFalso:bloqueFalso siError: bloqueError	self subclassResponsibility ! !Tribooleano << #Verdadero	layout: FixedLayout;	traits: {};	slots: {};	sharedVariables: {};	sharedPools: {};	tag: '' ;	package: 'Tribooleano'!Tribooleano << #Falso	layout: FixedLayout;	traits: {};	slots: {};	sharedVariables: {};	sharedPools: {};	tag: '' ;	package: 'Tribooleano'!Tribooleano << #ErrorTri	layout: FixedLayout;	traits: {};	slots: {};	sharedVariables: {};	sharedPools: {};	tag: '' ;	package: 'Tribooleano'!!ErrorTri methodsFor: 'logical operations' stamp: '6/17/2024 11:31'!& unTribooleano	^ self! !!ErrorTri methodsFor: 'logical operations' stamp: '6/17/2024 11:31'!| unTribooleano	^ self! !!ErrorTri methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:31'!esError	^ Falso new! !!ErrorTri methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:31'!esFalso	^ Falso new! !!ErrorTri methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:32' prior: 5361!esError	^ Verdadero new! !!ErrorTri methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:32'!esVerdadero	^ Falso new! !!ErrorTri methodsFor: 'logical operations' stamp: '6/17/2024 11:32'!not	^ self! !!ErrorTri methodsFor: 'logical operations' stamp: '6/17/2024 11:32' prior: 6151!not	^ Error new! !!ErrorTri methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:33'!siError: bloqueError	^ bloqueError value! !!ErrorTri methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:33'!siFalso: bloqueFalso	^ bloqueFalso value! !!ErrorTri methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:33'!siVerdadero: bloqueVerdadero	^ nil! !!ErrorTri methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:33'!siVerdadero: bloqueVerdadero siError: bloqueError	^ bloqueError value! !!ErrorTri methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:33'!siVerdadero: bloqueVerdadero siFalso: bloqueFalso	^ nil! !!ErrorTri methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:34'!siVerdadero: bloqueVerdadero siFalso:bloqueFalso siError: bloqueError	^ bloqueError value! !!Falso methodsFor: 'logical operations' stamp: '6/17/2024 11:34'!& unTribooleano	^ self! !!Falso methodsFor: 'logical operations' stamp: '6/17/2024 11:34'!| unTribooleano	^ unTribooleano ! !!Falso methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:35'!esError	^ Falso new! !!Falso methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:35'!esFalso	^ Verdadero new! !!Falso methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:35'!esVerdadero	^ Falso new! !!Falso methodsFor: 'logical operations' stamp: '6/17/2024 11:35'!not	^ Verdadero new! !!Falso methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:35'!siError: bloqueError	^ nil! !!Falso methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:35'!siFalso: bloqueFalso	^ bloqueFalso value! !!Falso methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:36'!siVerdadero: bloqueVerdadero	^ nil! !!Falso methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:36'!siVerdadero: bloqueVerdadero siError: bloqueError	^ nil! !!Falso methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:36'!siVerdadero: bloqueVerdadero siFalso: bloqueFalso	^ bloqueFalso value! !!Falso methodsFor: 'as yet unclassified' stamp: '6/17/2024 11:36'!siVerdadero: bloqueVerdadero siFalso:bloqueFalso siError: bloqueError	^ bloqueFalso value! !!Falso methodsFor: 'as yet unclassified' stamp: '6/17/2024 12:44' prior: 8463!esError	^ self new! !!Falso methodsFor: 'as yet unclassified' stamp: '6/17/2024 12:44' prior: 10719!esError	^ self! !!Verdadero methodsFor: 'logical operations' stamp: '6/17/2024 12:44'!& unTribooleano	^ unTribooleano ! !!Verdadero methodsFor: 'logical operations' stamp: '6/17/2024 12:44'!| unTribooleano	^ self! !!Verdadero methodsFor: 'as yet unclassified' stamp: '6/17/2024 12:45'!esError	^ Falso new! !!Verdadero methodsFor: 'as yet unclassified' stamp: '6/17/2024 12:45'!esFalso	^ Falso new! !!Verdadero methodsFor: 'as yet unclassified' stamp: '6/17/2024 12:45'!esVerdadero	^ self! !!Verdadero methodsFor: 'logical operations' stamp: '6/17/2024 12:45'!not	^ Falso new! !!Verdadero methodsFor: 'as yet unclassified' stamp: '6/17/2024 12:45'!siError: bloqueError	^ nil! !!Verdadero methodsFor: 'as yet unclassified' stamp: '6/17/2024 12:46'!siFalso: bloqueFalso	^ nil! !!Verdadero methodsFor: 'as yet unclassified' stamp: '6/17/2024 12:46'!siVerdadero: bloqueVerdadero	^ bloqueVerdadero value! !!Verdadero methodsFor: 'as yet unclassified' stamp: '6/17/2024 12:46'!siVerdadero: bloqueVerdadero siError: bloqueError	^ bloqueVerdadero value! !!Verdadero methodsFor: 'as yet unclassified' stamp: '6/17/2024 12:46'!siVerdadero: bloqueVerdadero siFalso: bloqueFalso	^ bloqueVerdadero value! !!Verdadero methodsFor: 'as yet unclassified' stamp: '6/17/2024 12:46'!siVerdadero: bloqueVerdadero siFalso:bloqueFalso siError: bloqueError	^ bloqueVerdadero value! !!ProtoObject methodsFor: 'nil' stamp: '6/17/2024 12:47'!esIgual: objeto	^ (objeto class = self class) ifTrue: [		(objeto = self) 		ifTrue: [ Verdadero new ] 		ifFalse: [ Falso new ]	] 	ifFalse: [ Error new ]! !----SNAPSHOT----2024-06-17T12:48:48.884-03:00 Pharo 12.0 - 64bit (stable).image priorSource: 305!----SNAPSHOT----2024-06-17T12:48:48.895-03:00 Pharo 12.0 - 64bit (stable).image priorSource: 7075!!ProtoObject methodsFor: 'as yet unclassified' stamp: '6/17/2024 12:53' prior: 13831!esIgual: objeto	^ (objeto class = self class) ifTrue: [		(objeto = self) 		ifTrue: [ Verdadero new ] 		ifFalse: [ Falso new ]	] 	ifFalse: [ ErrorTri new ]! !----SNAPSHOT----2024-06-17T13:10:02.716-03:00 Pharo 12.0 - 64bit (stable).image priorSource: 7174!----SNAPSHOT----2024-06-17T13:10:02.725-03:00 Pharo 12.0 - 64bit (stable).image priorSource: 7524!!ErrorTri methodsFor: 'as yet unclassified' stamp: '6/17/2024 14:43' prior: 6753!siFalso: bloqueFalso	^ nil! !Object << #NumeroComplejo	slots: {};	sharedVariables: {};	package: 'NumeroComplejo'!Object << #NumeroComplejo	slots: { #real . #imaginary };	package: 'NumeroComplejo'!!NumeroComplejo methodsFor: 'accessing' stamp: '6/17/2024 15:51'!imaginary	^ imaginary! !!NumeroComplejo methodsFor: 'accessing' stamp: '6/17/2024 15:51'!real	^ real! !Object << #NumeroComplejo	slots: { #real . #imaginary . #radius . #angle };	package: 'NumeroComplejo'!!NumeroComplejo methodsFor: 'accessing' stamp: '6/17/2024 16:12'!radius	^ radius! !!NumeroComplejo methodsFor: 'accessing' stamp: '6/17/2024 16:12'!real: anObject	real := anObject! !NumeroComplejo removeSelector: #real:!!NumeroComplejo methodsFor: 'accessing' stamp: '6/17/2024 16:23'!angle	^ angle! !!NumeroComplejo methodsFor: 'accessing' stamp: '6/17/2024 16:27'!angle: anObject	angle := anObject! !!NumeroComplejo methodsFor: 'accessing' stamp: '6/17/2024 16:27'!imaginary: anObject	imaginary := anObject! !!NumeroComplejo methodsFor: 'accessing' stamp: '6/17/2024 16:27'!radius: anObject	radius := anObject! !!NumeroComplejo methodsFor: 'accessing' stamp: '6/17/2024 16:28'!real: anObject	real := anObject! !!NumeroComplejo class methodsFor: 'nil' stamp: '6/17/2024 16:42'!real: newReal imaginary: newImaginary	| number |		number := self new.	number real: newReal.	number imaginary: newImaginary.		number angle: (newImaginary arcTan: newReal).	number radius: (newReal pow: 2) + (newImaginary pow: 2) sqrt.		^ number! !!NumeroComplejo class methodsFor: 'nil' stamp: '6/17/2024 16:43'!new	^ Error signal: 'no se puede utilizar new'! !----SNAPSHOT----2024-06-17T16:45:26.889-03:00 Pharo 12.0 - 64bit (stable).image priorSource: 7624!----SNAPSHOT----2024-06-17T16:45:26.901-03:00 Pharo 12.0 - 64bit (stable).image priorSource: 9477!!NumeroComplejo class methodsFor: 'nil' stamp: '6/17/2024 17:08'!angle: newAngle radius: newRadius	| number |		number := self new.	number angle: newAngle.	number radius: newRadius.		number real: newRadius * newAngle cos.	number imaginary: newRadius * newAngle sin.		^ number! !----SNAPSHOT----2024-06-17T17:13:03.475-03:00 Pharo 12.0 - 64bit (stable).image priorSource: 9577!----SNAPSHOT----2024-06-17T17:13:03.485-03:00 Pharo 12.0 - 64bit (stable).image priorSource: 9966!!NumeroComplejo methodsFor: 'nil' stamp: '6/17/2024 17:28'!+ unNumeroComplejoOReal	^ (unNumeroComplejoOReal class = 'NumeroComplejo') 		ifTrue: [ unNumeroComplejoOReal + self real ]		ifFalse: [ 			NumeroComplejo 			real: (self real + unNumeroComplejoOReal real) 			imaginary: (self imaginary + unNumeroComplejoOReal imaginary) 		]! !!NumeroComplejo methodsFor: 'arithmetic' stamp: '6/17/2024 17:28' prior: 20455!+ unNumeroComplejoOReal	^ (unNumeroComplejoOReal class = 'NumeroComplejo') 		ifTrue: [ unNumeroComplejoOReal + self real ]		ifFalse: [ 			self			real: (self real + unNumeroComplejoOReal real) 			imaginary: (self imaginary + unNumeroComplejoOReal imaginary) 		]! !!NumeroComplejo methodsFor: 'arithmetic' stamp: '6/17/2024 17:28' prior: 21179!+ unNumeroComplejoOReal	^ (unNumeroComplejoOReal class = 'NumeroComplejo') 		ifTrue: [ unNumeroComplejoOReal + self real ]		ifFalse: [ 			NumeroComplejo 			real: (self real + unNumeroComplejoOReal real) 			imaginary: (self imaginary + unNumeroComplejoOReal imaginary) 		]! !!NumeroComplejo methodsFor: 'arithmetic' stamp: '6/17/2024 17:28' prior: 21881!+ unNumeroComplejoOReal	^ (unNumeroComplejoOReal class = 'NumeroComplejo') 		ifTrue: [ unNumeroComplejoOReal + self real ]		ifFalse: [ 			self class			real: (self real + unNumeroComplejoOReal real) 			imaginary: (self imaginary + unNumeroComplejoOReal imaginary) 		]! !!NumeroComplejo methodsFor: 'arithmetic' stamp: '6/17/2024 17:30' prior: 22605!+ unNumeroComplejoOReal	^ (unNumeroComplejoOReal isNumber) 		ifTrue: [ unNumeroComplejoOReal + self real ]		ifFalse: [ 			self class			real: (self real + unNumeroComplejoOReal real) 			imaginary: (self imaginary + unNumeroComplejoOReal imaginary) 		]! !!NumeroComplejo methodsFor: 'nil' stamp: '6/17/2024 17:39'!- unNumeroComplejoOReal	^ (unNumeroComplejoOReal isNumber) 		ifTrue: [ unNumeroComplejoOReal - self real ]		ifFalse: [ 			self class			real: (self real - unNumeroComplejoOReal real) 			imaginary: (self imaginary - unNumeroComplejoOReal imaginary) 		]! !!NumeroComplejo methodsFor: 'nil' stamp: '6/17/2024 17:47'!* unNumeroComplejoOReal	| a b c d ac ad bc bd |		^ (unNumeroComplejoOReal isNumber) 		ifTrue: [ unNumeroComplejoOReal * self real ]		ifFalse: [ 				a := self real.				b := self imaginary.				c := unNumeroComplejoOReal real.				d := unNumeroComplejoOReal imaginary.					ac := a * c.				ad := a * d.				bc := b * c.				bd := b * d.				^ self class					real: (ac - bd) 					imaginary: (ad + bc) 		]! !!NumeroComplejo methodsFor: 'arithmetic' stamp: '6/17/2024 17:56' prior: 24603!* unNumeroComplejoOReal	| a b c d ac ad bc bd |		^ (unNumeroComplejoOReal isNumber) 		ifTrue: [ unNumeroComplejoOReal * self real ]		ifFalse: [ 				a := self real.				b := self imaginary.				c := unNumeroComplejoOReal real.				d := unNumeroComplejoOReal imaginary.				^ self class					real: (a * c - b * d) 					imaginary: (a * d + b * c) 		]! !!NumeroComplejo methodsFor: 'arithmetic' stamp: '6/17/2024 17:56' prior: 25599!* unNumeroComplejoOReal	| a b c d |		^ (unNumeroComplejoOReal isNumber) 		ifTrue: [ unNumeroComplejoOReal * self real ]		ifFalse: [ 				a := self real.				b := self imaginary.				c := unNumeroComplejoOReal real.				d := unNumeroComplejoOReal imaginary.				^ self class					real: (a * c - b * d) 					imaginary: (a * d + b * c) 		]! !!NumeroComplejo methodsFor: 'arithmetic' stamp: '6/17/2024 17:56' prior: 26479!* unNumeroComplejoOReal	| a b c d |		^ (unNumeroComplejoOReal isNumber) 		ifTrue: [ unNumeroComplejoOReal * self real ]		ifFalse: [ 				a := self real.				b := self imaginary.				c := unNumeroComplejoOReal real.				d := unNumeroComplejoOReal imaginary.				^ self class					real: ((a * c) - b * d) 					imaginary: ((a * d)+ b * c) 		]! !!NumeroComplejo methodsFor: 'arithmetic' stamp: '6/17/2024 17:56' prior: 27335!* unNumeroComplejoOReal	| a b c d |		^ (unNumeroComplejoOReal isNumber) 		ifTrue: [ unNumeroComplejoOReal * self real ]		ifFalse: [ 				a := self real.				b := self imaginary.				c := unNumeroComplejoOReal real.				d := unNumeroComplejoOReal imaginary.				^ self class					real: ((a * c) - (b * d)) 					imaginary: ((a * d)+ (b * c)) 		]! !!NumeroComplejo methodsFor: 'nil' stamp: '6/17/2024 17:59'!/ unNumeroComplejoOReal	| a b c d denominador |		^ (unNumeroComplejoOReal isNumber) 		ifTrue: [ unNumeroComplejoOReal * self real ]		ifFalse: [							a := self real.				b := self imaginary.				c := unNumeroComplejoOReal real.				d := unNumeroComplejoOReal imaginary.								denominador := c * c + d * d.								^ self class					real: ((a * c) + (b * d) / denominador) 					imaginary: ((b * c) - (a * d) / denominador) 		]! !!NumeroComplejo methodsFor: 'arithmetic' stamp: '6/17/2024 17:59' prior: 29027!/ unNumeroComplejoOReal	| a b c d denominador |		^ (unNumeroComplejoOReal isNumber) 		ifTrue: [ unNumeroComplejoOReal * self real ]		ifFalse: [							a := self real.				b := self imaginary.				c := unNumeroComplejoOReal real.				d := unNumeroComplejoOReal imaginary.								denominador := (c * c) + (d * d).								^ self class					real: ((a * c) + (b * d) / denominador) 					imaginary: ((b * c) - (a * d) / denominador) 		]! !!NumeroComplejo methodsFor: 'arithmetic' stamp: '6/17/2024 18:00' prior: 30071!/ unNumeroComplejoOReal	^ (unNumeroComplejoOReal isNumber) 		ifTrue: [ unNumeroComplejoOReal * self real ]		ifFalse: [				| a b c d denominador |								a := self real.				b := self imaginary.				c := unNumeroComplejoOReal real.				d := unNumeroComplejoOReal imaginary.								denominador := (c * c) + (d * d).								^ self class					real: ((a * c) + (b * d) / denominador) 					imaginary: ((b * c) - (a * d) / denominador) 		]! !!NumeroComplejo methodsFor: 'arithmetic' stamp: '6/17/2024 18:00' prior: 28197!* unNumeroComplejoOReal	^ (unNumeroComplejoOReal isNumber) 		ifTrue: [ unNumeroComplejoOReal * self real ]		ifFalse: [			| a b c d | 				a := self real.				b := self imaginary.				c := unNumeroComplejoOReal real.				d := unNumeroComplejoOReal imaginary.				^ self class					real: ((a * c) - (b * d)) 					imaginary: ((a * d)+ (b * c)) 		]! !!NumeroComplejo methodsFor: 'nil' stamp: '6/17/2024 18:04'!new ^ 'hola'! !NumeroComplejo removeSelector: #new!----SNAPSHOT----2024-06-17T18:18:02.769-03:00 Pharo 12.0 - 64bit (stable).image priorSource: 10066!----SNAPSHOT----2024-06-17T18:18:02.781-03:00 Pharo 12.0 - 64bit (stable).image priorSource: 16558!NumeroComplejo class removeSelector: #new!!NumeroComplejo class methodsFor: 'as yet unclassified' stamp: '6/17/2024 18:26' prior: 18211!real: newReal imaginary: newImaginary	| number |		number := self new.	number real: newReal.	number imaginary: newImaginary.		number angle: (newImaginary arcTan: newReal).	number radius: (newReal * newReal) + (newImaginary * newImaginary ) sqrt.		^ number! !----SNAPSHOT----2024-06-17T18:32:12.702-03:00 Pharo 12.0 - 64bit (stable).image priorSource: 16659!----SNAPSHOT----2024-06-17T18:32:12.713-03:00 Pharo 12.0 - 64bit (stable).image priorSource: 17167!----SNAPSHOT----2024-06-17T18:33:03.067-03:00 TPFinalSmalltalk.image priorSource: 17268!----SNAPSHOT----2024-06-17T18:33:03.077-03:00 TPFinalSmalltalk.image priorSource: 17369!----QUIT----2024-06-17T18:58:04.102-03:00 TPFinalSmalltalk.image priorSource: 17459!----QUIT----2024-06-17T18:58:04.112-03:00 TPFinalSmalltalk.image priorSource: 17549!